{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10600601,"sourceType":"datasetVersion","datasetId":6561591},{"sourceType":"datasetVersion","sourceId":10615889,"datasetId":6572487}],"dockerImageVersionId":30840,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/hbaolong/notebook644a85a74c?scriptVersionId=219898462\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"Set up","metadata":{}},{"cell_type":"code","source":"!apt-get update\n!apt-get install openjdk-11-jdk-headless -qq > /dev/null\n\n!java -version","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:45:38.995587Z","iopub.execute_input":"2025-01-30T08:45:38.995935Z","iopub.status.idle":"2025-01-30T08:45:46.148549Z","shell.execute_reply.started":"2025-01-30T08:45:38.995905Z","shell.execute_reply":"2025-01-30T08:45:46.147747Z"}},"outputs":[{"name":"stdout","text":"Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease\nGet:2 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]                             \nGet:3 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,626 B]                \nGet:4 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]                           \nGet:5 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease [1,581 B]\nGet:6 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease [18.1 kB]              \nGet:7 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease [24.3 kB]        \nHit:8 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease                         \nGet:9 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]     \nGet:10 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ Packages [62.9 kB]     \nGet:11 https://r2u.stat.illinois.edu/ubuntu jammy InRelease [6,555 B]                      \nGet:12 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,521 kB]\nGet:13 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [3,742 kB]\nGet:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  Packages [1,304 kB]\nGet:15 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,904 kB]            \nGet:16 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [35.2 kB]     \nGet:17 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages [32.9 kB]\nGet:18 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy/main amd64 Packages [53.6 kB]\nGet:19 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,229 kB]\nGet:20 https://r2u.stat.illinois.edu/ubuntu jammy/main amd64 Packages [2,647 kB]\nGet:21 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [3,606 kB]\nGet:22 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2,604 kB]\nGet:23 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [45.2 kB]    \nGet:24 https://r2u.stat.illinois.edu/ubuntu jammy/main all Packages [8,632 kB]                 \nFetched 28.9 MB in 3s (9,990 kB/s)                           \nReading package lists... Done\nW: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\nopenjdk version \"11.0.25\" 2024-10-15\nOpenJDK Runtime Environment (build 11.0.25+9-post-Ubuntu-1ubuntu122.04)\nOpenJDK 64-Bit Server VM (build 11.0.25+9-post-Ubuntu-1ubuntu122.04, mixed mode, sharing)\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"!wget \"https://www.apache.org/dyn/closer.lua/spark/spark-3.5.4/spark-3.5.4-bin-hadoop3.tgz?action=download\" -O spark-3.5.4-bin-hadoop3.tgz\n\n!ls -lh spark-3.5.4-bin-hadoop3.tgz","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:45:52.730491Z","iopub.execute_input":"2025-01-30T08:45:52.730813Z","iopub.status.idle":"2025-01-30T08:45:56.269139Z","shell.execute_reply.started":"2025-01-30T08:45:52.730789Z","shell.execute_reply":"2025-01-30T08:45:56.268115Z"}},"outputs":[{"name":"stdout","text":"--2025-01-30 08:45:52--  https://www.apache.org/dyn/closer.lua/spark/spark-3.5.4/spark-3.5.4-bin-hadoop3.tgz?action=download\nResolving www.apache.org (www.apache.org)... 151.101.2.132, 2a04:4e42::644\nConnecting to www.apache.org (www.apache.org)|151.101.2.132|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://dlcdn.apache.org/spark/spark-3.5.4/spark-3.5.4-bin-hadoop3.tgz [following]\n--2025-01-30 08:45:52--  https://dlcdn.apache.org/spark/spark-3.5.4/spark-3.5.4-bin-hadoop3.tgz\nResolving dlcdn.apache.org (dlcdn.apache.org)... 151.101.2.132, 2a04:4e42::644\nConnecting to dlcdn.apache.org (dlcdn.apache.org)|151.101.2.132|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 400879762 (382M) [application/x-gzip]\nSaving to: ‘spark-3.5.4-bin-hadoop3.tgz’\n\nspark-3.5.4-bin-had 100%[===================>] 382.31M   453MB/s    in 0.8s    \n\n2025-01-30 08:45:56 (453 MB/s) - ‘spark-3.5.4-bin-hadoop3.tgz’ saved [400879762/400879762]\n\n-rw-r--r-- 1 root root 383M Dec 17 05:16 spark-3.5.4-bin-hadoop3.tgz\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"!tar -xzf spark-3.5.4-bin-hadoop3.tgz","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:45:59.009662Z","iopub.execute_input":"2025-01-30T08:45:59.009973Z","iopub.status.idle":"2025-01-30T08:46:02.375047Z","shell.execute_reply.started":"2025-01-30T08:45:59.009944Z","shell.execute_reply":"2025-01-30T08:46:02.374026Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"!ls -lh /kaggle/working/spark-3.5.4-bin-hadoop3/","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:04.608303Z","iopub.execute_input":"2025-01-30T08:46:04.608603Z","iopub.status.idle":"2025-01-30T08:46:04.72849Z","shell.execute_reply.started":"2025-01-30T08:46:04.60858Z","shell.execute_reply":"2025-01-30T08:46:04.727694Z"}},"outputs":[{"name":"stdout","text":"total 156K\ndrwxr-xr-x 2 1000 1000 4.0K Dec 17 05:13 bin\ndrwxr-xr-x 2 1000 1000 4.0K Dec 17 05:13 conf\ndrwxr-xr-x 6 1000 1000 4.0K Dec 17 05:13 data\ndrwxr-xr-x 4 1000 1000 4.0K Dec 17 05:13 examples\ndrwxr-xr-x 2 1000 1000  20K Dec 17 05:13 jars\ndrwxr-xr-x 4 1000 1000 4.0K Dec 17 05:13 kubernetes\n-rw-r--r-- 1 1000 1000  23K Dec 17 05:13 LICENSE\ndrwxr-xr-x 2 1000 1000 4.0K Dec 17 05:13 licenses\n-rw-r--r-- 1 1000 1000  57K Dec 17 05:13 NOTICE\ndrwxr-xr-x 9 1000 1000 4.0K Dec 17 05:13 python\ndrwxr-xr-x 3 1000 1000 4.0K Dec 17 05:13 R\n-rw-r--r-- 1 1000 1000 4.5K Dec 17 05:13 README.md\n-rw-r--r-- 1 1000 1000  166 Dec 17 05:13 RELEASE\ndrwxr-xr-x 2 1000 1000 4.0K Dec 17 05:13 sbin\ndrwxr-xr-x 2 1000 1000 4.0K Dec 17 05:13 yarn\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"!pip install findspark","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:07.557145Z","iopub.execute_input":"2025-01-30T08:46:07.557439Z","iopub.status.idle":"2025-01-30T08:46:13.574395Z","shell.execute_reply.started":"2025-01-30T08:46:07.557416Z","shell.execute_reply":"2025-01-30T08:46:13.573345Z"}},"outputs":[{"name":"stdout","text":"Collecting findspark\n  Downloading findspark-2.0.1-py2.py3-none-any.whl.metadata (352 bytes)\nDownloading findspark-2.0.1-py2.py3-none-any.whl (4.4 kB)\nInstalling collected packages: findspark\nSuccessfully installed findspark-2.0.1\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"import os\nimport findspark\n\nos.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-11-openjdk-amd64\"\nos.environ[\"SPARK_HOME\"] = \"/kaggle/working/spark-3.5.4-bin-hadoop3\"\n\nfindspark.init()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:14.709358Z","iopub.execute_input":"2025-01-30T08:46:14.709719Z","iopub.status.idle":"2025-01-30T08:46:14.718555Z","shell.execute_reply.started":"2025-01-30T08:46:14.709687Z","shell.execute_reply":"2025-01-30T08:46:14.71776Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"!pip install -q pyspark","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:27.060379Z","iopub.execute_input":"2025-01-30T08:46:27.061033Z","iopub.status.idle":"2025-01-30T08:46:30.293753Z","shell.execute_reply.started":"2025-01-30T08:46:27.061Z","shell.execute_reply":"2025-01-30T08:46:30.292763Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"from pyspark.sql import SparkSession\n\nspark = SparkSession.builder \\\n    .appName(\"AirQualityPrediction\") \\\n    .config(\"spark.executor.memory\", \"2g\") \\\n    .getOrCreate()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:22.481742Z","iopub.execute_input":"2025-01-30T08:46:22.482073Z","iopub.status.idle":"2025-01-30T08:46:27.058906Z","shell.execute_reply.started":"2025-01-30T08:46:22.482047Z","shell.execute_reply":"2025-01-30T08:46:27.057819Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"data_path = '/kaggle/input/data-air-processing/air_quality_data.csv'\n\ndf = (\n    spark.read.format(\"csv\")\n    .option(\"header\", \"true\")  \n    .option(\"inferSchema\", \"true\")\n    .option(\"delimiter\", \",\")  \n    .option(\"quote\", \"\\\"\")  \n    .option(\"escape\", \"\\\"\") \n    .option(\"multiLine\", \"true\")  \n    .option(\"mode\", \"DROPMALFORMED\") \n    .load(data_path)\n)\n\ndf.printSchema()\n\ndf.show(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:30.295312Z","iopub.execute_input":"2025-01-30T08:46:30.295539Z","iopub.status.idle":"2025-01-30T08:46:36.339116Z","shell.execute_reply.started":"2025-01-30T08:46:30.295519Z","shell.execute_reply":"2025-01-30T08:46:36.337741Z"}},"outputs":[{"name":"stdout","text":"root\n |-- Mã trạm: integer (nullable = true)\n |-- Chỉ số AQI: string (nullable = true)\n |-- Vị trí: string (nullable = true)\n |-- Tên trạm: string (nullable = true)\n |-- Url: string (nullable = true)\n |-- Chất ô nhiễm chủ đạo: string (nullable = true)\n |-- CO: string (nullable = true)\n |-- Sương: double (nullable = true)\n |-- Độ ẩm: double (nullable = true)\n |-- NO2: string (nullable = true)\n |-- O3: string (nullable = true)\n |-- Áp suất: string (nullable = true)\n |-- Bụi PM10: string (nullable = true)\n |-- Bụi PM2.5: string (nullable = true)\n |-- SO2: string (nullable = true)\n |-- Nhiệt độ: double (nullable = true)\n |-- Tốc độ gió: double (nullable = true)\n |-- Thời gian cập nhật: string (nullable = true)\n\n+-------+----------+--------------------+--------------------+--------------------+--------------------+---+-----+-----+---+---+--------+--------+---------+---+--------+----------+------------------+\n|Mã trạm|Chỉ số AQI|              Vị trí|            Tên trạm|                 Url|Chất ô nhiễm chủ đạo| CO|Sương|Độ ẩm|NO2| O3| Áp suất|Bụi PM10|Bụi PM2.5|SO2|Nhiệt độ|Tốc độ gió|Thời gian cập nhật|\n+-------+----------+--------------------+--------------------+--------------------+--------------------+---+-----+-----+---+---+--------+--------+---------+---+--------+----------+------------------+\n|   8767|       102|10.782978,106.700711|Ho Chi Minh City ...|https://aqicn.org...|                pm25|  -|  0.0| 83.0|  -|  -|1,009.00|       0|      102|  -|    27.0|       3.6|   1/21/2021 19:00|\n|   8688|       221|21.0811211,105.81...|United Nations In...|https://aqicn.org...|                 aqi|  -|  0.0| 77.0|  -|  -|1,015.00|       0|        -|  -|    18.0|       1.5|   1/21/2021 20:00|\n|   8641|       281|21.0215063,105.81...|Hanoi US Embassy,...|https://aqicn.org...|                pm25|0.3|  0.0| 77.0|8.7|0.9|1,015.00|       0|      281|2.1|    18.0|       1.5|   1/21/2021 20:00|\n|  13012|        36|13.998599,107.996482|Gia Lai/phường Th...|https://aqicn.org...|                pm25|  3|  0.0| 60.2|  6|  9|   923.7|      29|       36|  1|    24.3|       1.0|   1/21/2021 20:00|\n|  12488|        68| 16.46226,107.596351|Thừa Thiên Huế/83...|https://aqicn.org...|                pm25|  2|  0.0| 88.0|  -|  -|1,015.00|      52|       68|  -|    21.0|       1.0|   1/21/2021 19:00|\n+-------+----------+--------------------+--------------------+--------------------+--------------------+---+-----+-----+---+---+--------+--------+---------+---+--------+----------+------------------+\nonly showing top 5 rows\n\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"print(\"Các cột hiện tại trong DataFrame:\")\nprint(df.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:46:44.440069Z","iopub.execute_input":"2025-01-30T08:46:44.440349Z","iopub.status.idle":"2025-01-30T08:46:44.464755Z","shell.execute_reply.started":"2025-01-30T08:46:44.440329Z","shell.execute_reply":"2025-01-30T08:46:44.464081Z"}},"outputs":[{"name":"stdout","text":"Các cột hiện tại trong DataFrame:\n['Mã trạm', 'Chỉ số AQI', 'Vị trí', 'Tên trạm', 'Url', 'Chất ô nhiễm chủ đạo', 'CO', 'Sương', 'Độ ẩm', 'NO2', 'O3', 'Áp suất', 'Bụi PM10', 'Bụi PM2.5', 'SO2', 'Nhiệt độ', 'Tốc độ gió', 'Thời gian cập nhật']\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"original_columns = df.columns\nnew_columns = [c.replace('.', '_').replace(' ', '_') for c in original_columns]\n\nfor original, new in zip(original_columns, new_columns):\n    df = df.withColumnRenamed(original, new)\n\ndf.printSchema()\nprint(\"Các cột sau khi đổi tên:\")\nprint(df.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:49:52.122391Z","iopub.execute_input":"2025-01-30T08:49:52.122829Z","iopub.status.idle":"2025-01-30T08:49:52.300955Z","shell.execute_reply.started":"2025-01-30T08:49:52.122798Z","shell.execute_reply":"2025-01-30T08:49:52.299098Z"}},"outputs":[{"name":"stdout","text":"root\n |-- Mã_trạm: integer (nullable = true)\n |-- Chỉ_số_AQI: string (nullable = true)\n |-- Vị_trí: string (nullable = true)\n |-- Tên_trạm: string (nullable = true)\n |-- Url: string (nullable = true)\n |-- Chất_ô_nhiễm_chủ_đạo: string (nullable = true)\n |-- CO: double (nullable = true)\n |-- Sương: double (nullable = true)\n |-- Độ_ẩm: double (nullable = true)\n |-- NO2: double (nullable = true)\n |-- O3: double (nullable = true)\n |-- Áp_suất: double (nullable = true)\n |-- Bụi_PM10: double (nullable = true)\n |-- Bụi_PM2_5: double (nullable = true)\n |-- SO2: double (nullable = true)\n |-- Nhiệt_độ: double (nullable = true)\n |-- Tốc_độ_gió: double (nullable = true)\n |-- Thời_gian_cập_nhật: string (nullable = true)\n\nCác cột sau khi đổi tên:\n['Mã_trạm', 'Chỉ_số_AQI', 'Vị_trí', 'Tên_trạm', 'Url', 'Chất_ô_nhiễm_chủ_đạo', 'CO', 'Sương', 'Độ_ẩm', 'NO2', 'O3', 'Áp_suất', 'Bụi_PM10', 'Bụi_PM2_5', 'SO2', 'Nhiệt_độ', 'Tốc_độ_gió', 'Thời_gian_cập_nhật']\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"numeric_columns = ['CO', 'Sương', 'Độ_ẩm', 'NO2', 'O3', 'Áp_suất', 'Chỉ_số_AQI',\n                   'Bụi_PM10', 'Bụi_PM2_5', 'SO2', 'Nhiệt_độ', 'Tốc_độ_gió']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:50:37.567068Z","iopub.execute_input":"2025-01-30T08:50:37.567397Z","iopub.status.idle":"2025-01-30T08:50:37.571279Z","shell.execute_reply.started":"2025-01-30T08:50:37.567374Z","shell.execute_reply":"2025-01-30T08:50:37.570335Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"from pyspark.sql.functions import regexp_replace, col, when\n\nfor column in numeric_columns:\n    df = df.withColumn(column, regexp_replace(col(column), \",\", \"\").cast(\"double\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:51:02.728514Z","iopub.execute_input":"2025-01-30T08:51:02.728876Z","iopub.status.idle":"2025-01-30T08:51:03.042597Z","shell.execute_reply.started":"2025-01-30T08:51:02.728848Z","shell.execute_reply":"2025-01-30T08:51:03.041518Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"for column in numeric_columns:\n    df = df.withColumn(column, when(col(column) == '-', None).otherwise(col(column)))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:51:13.15884Z","iopub.execute_input":"2025-01-30T08:51:13.159134Z","iopub.status.idle":"2025-01-30T08:51:13.400092Z","shell.execute_reply.started":"2025-01-30T08:51:13.159112Z","shell.execute_reply":"2025-01-30T08:51:13.39917Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"from pyspark.sql.functions import count, when, isnan\n\n# Kiểm tra số lượng giá trị thiếu trong mỗi cột\nmissing_values = df.select([count(when(isnan(c) | col(c).isNull(), c)).alias(c) for c in df.columns])\nmissing_values.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:43:12.677729Z","iopub.status.idle":"2025-01-30T08:43:12.678057Z","shell.execute_reply":"2025-01-30T08:43:12.677915Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from pyspark.sql.functions import count, when, isnan\n\nmissing_values = df.select([count(when(isnan(c) | col(c).isNull(), c)).alias(c) for c in df.columns])\nmissing_values.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:51:27.507242Z","iopub.execute_input":"2025-01-30T08:51:27.507673Z","iopub.status.idle":"2025-01-30T08:51:29.645397Z","shell.execute_reply.started":"2025-01-30T08:51:27.507639Z","shell.execute_reply":"2025-01-30T08:51:29.644855Z"}},"outputs":[{"name":"stdout","text":"+-------+----------+------+--------+---+--------------------+---+-----+-----+---+----+-------+--------+---------+----+--------+----------+------------------+\n|Mã_trạm|Chỉ_số_AQI|Vị_trí|Tên_trạm|Url|Chất_ô_nhiễm_chủ_đạo| CO|Sương|Độ_ẩm|NO2|  O3|Áp_suất|Bụi_PM10|Bụi_PM2_5| SO2|Nhiệt_độ|Tốc_độ_gió|Thời_gian_cập_nhật|\n+-------+----------+------+--------+---+--------------------+---+-----+-----+---+----+-------+--------+---------+----+--------+----------+------------------+\n|      0|       517|     0|       0|  0|                 508|460|    0|    0|623|1381|      0|     695|      430|1353|       0|         0|                 0|\n+-------+----------+------+--------+---+--------------------+---+-----+-----+---+----+-------+--------+---------+----+--------+----------+------------------+\n\n","output_type":"stream"}],"execution_count":28},{"cell_type":"code","source":"# Kiểm tra xem df_clean đã được định nghĩa chưa\ntry:\n    print(df_clean.columns)\nexcept NameError:\n    print(\"df_clean chưa được định nghĩa. Vui lòng thực hiện các bước xử lý dữ liệu trước đó.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:52:06.216014Z","iopub.execute_input":"2025-01-30T08:52:06.216311Z","iopub.status.idle":"2025-01-30T08:52:06.220942Z","shell.execute_reply.started":"2025-01-30T08:52:06.216291Z","shell.execute_reply":"2025-01-30T08:52:06.220068Z"}},"outputs":[{"name":"stdout","text":"df_clean chưa được định nghĩa. Vui lòng thực hiện các bước xử lý dữ liệu trước đó.\n","output_type":"stream"}],"execution_count":30},{"cell_type":"code","source":"df_clean = df.dropna()\n\nprint(f\"Số dòng ban đầu: {df.count()}\")\nprint(f\"Số dòng sau khi loại bỏ giá trị thiếu: {df_clean.count()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:53:00.78412Z","iopub.execute_input":"2025-01-30T08:53:00.784418Z","iopub.status.idle":"2025-01-30T08:53:01.944634Z","shell.execute_reply.started":"2025-01-30T08:53:00.784397Z","shell.execute_reply":"2025-01-30T08:53:01.943475Z"}},"outputs":[{"name":"stdout","text":"Số dòng ban đầu: 2622\nSố dòng sau khi loại bỏ giá trị thiếu: 625\n","output_type":"stream"}],"execution_count":31},{"cell_type":"code","source":"from pyspark.sql.functions import col\n\ndf_clean = df_clean.withColumn(\"label\", col(\"Chỉ_số_AQI\").cast(\"double\"))\n\ndf_clean.printSchema()\ndf_clean = df_clean.drop(\"Chỉ_số_AQI\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:57:33.056482Z","iopub.execute_input":"2025-01-30T08:57:33.056852Z","iopub.status.idle":"2025-01-30T08:57:33.092638Z","shell.execute_reply.started":"2025-01-30T08:57:33.056825Z","shell.execute_reply":"2025-01-30T08:57:33.091742Z"}},"outputs":[{"name":"stdout","text":"root\n |-- Mã_trạm: integer (nullable = true)\n |-- Chỉ_số_AQI: double (nullable = true)\n |-- Vị_trí: string (nullable = true)\n |-- Tên_trạm: string (nullable = true)\n |-- Url: string (nullable = true)\n |-- Chất_ô_nhiễm_chủ_đạo: string (nullable = true)\n |-- CO: double (nullable = true)\n |-- Sương: double (nullable = true)\n |-- Độ_ẩm: double (nullable = true)\n |-- NO2: double (nullable = true)\n |-- O3: double (nullable = true)\n |-- Áp_suất: double (nullable = true)\n |-- Bụi_PM10: double (nullable = true)\n |-- Bụi_PM2_5: double (nullable = true)\n |-- SO2: double (nullable = true)\n |-- Nhiệt_độ: double (nullable = true)\n |-- Tốc_độ_gió: double (nullable = true)\n |-- Thời_gian_cập_nhật: string (nullable = true)\n |-- label: double (nullable = true)\n\n","output_type":"stream"}],"execution_count":41},{"cell_type":"code","source":"from pyspark.ml.feature import StringIndexer\n\nindexer_ma_tram = StringIndexer(inputCol=\"Mã_trạm\", outputCol=\"Ma_tram_Encoded\")\ndf_encoded = indexer_ma_tram.fit(df_clean).transform(df_clean)\n\nindexer_chat_okhi = StringIndexer(inputCol=\"Chất_ô_nhiễm_chủ_đạo\", outputCol=\"Chat_Okhi_Encoded\")\ndf_encoded = indexer_chat_okhi.fit(df_encoded).transform(df_encoded)\n\ndf_encoded.select(\"Mã_trạm\", \"Ma_tram_Encoded\", \"Chất_ô_nhiễm_chủ_đạo\", \"Chat_Okhi_Encoded\").show(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:57:43.450941Z","iopub.execute_input":"2025-01-30T08:57:43.451489Z","iopub.status.idle":"2025-01-30T08:57:44.780334Z","shell.execute_reply.started":"2025-01-30T08:57:43.451452Z","shell.execute_reply":"2025-01-30T08:57:44.779435Z"}},"outputs":[{"name":"stdout","text":"+-------+---------------+--------------------+-----------------+\n|Mã_trạm|Ma_tram_Encoded|Chất_ô_nhiễm_chủ_đạo|Chat_Okhi_Encoded|\n+-------+---------------+--------------------+-----------------+\n|   8641|            8.0|                pm25|              0.0|\n|  13012|            0.0|                pm25|              0.0|\n|  13251|            4.0|                pm25|              0.0|\n|  12976|            2.0|                pm25|              0.0|\n|  13250|            6.0|                pm25|              0.0|\n+-------+---------------+--------------------+-----------------+\nonly showing top 5 rows\n\n","output_type":"stream"}],"execution_count":42},{"cell_type":"code","source":"from pyspark.ml.feature import VectorAssembler, StandardScaler\n\n# Xác định các cột đặc trưng (bao gồm các cột mã hóa)\nfeature_columns = ['Ma_tram_Encoded', 'Chat_Okhi_Encoded', 'CO', 'Sương', 'Độ_ẩm',\n                   'NO2', 'O3', 'Áp_suất', 'Bụi_PM10', 'Bụi_PM2_5', 'SO2',\n                   'Nhiệt_độ', 'Tốc_độ_gió']\n\n# Tạo vector đặc trưng\nassembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features_unscaled\")\ndf_assembled = assembler.transform(df_encoded)\n\n# Chuẩn hóa dữ liệu\nscaler = StandardScaler(inputCol=\"features_unscaled\", outputCol=\"features\", withStd=True, withMean=False)\nscaler_model = scaler.fit(df_assembled)\ndf_scaled = scaler_model.transform(df_assembled)\n\n# Chọn nhãn và đặc trưng cuối cùng\ndf_final = df_scaled.select(\"features\", \"label\")\n\n# Hiển thị dữ liệu cuối cùng\ndf_final.show(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:57:50.109492Z","iopub.execute_input":"2025-01-30T08:57:50.109866Z","iopub.status.idle":"2025-01-30T08:57:51.596308Z","shell.execute_reply.started":"2025-01-30T08:57:50.109838Z","shell.execute_reply":"2025-01-30T08:57:51.595694Z"}},"outputs":[{"name":"stdout","text":"+--------------------+-----+\n|            features|label|\n+--------------------+-----+\n|[3.47138916821756...|281.0|\n|[0.0,0.0,0.293273...| 36.0|\n|[1.73569458410878...|217.0|\n|[0.86784729205439...|195.0|\n|[2.60354187616317...|168.0|\n+--------------------+-----+\nonly showing top 5 rows\n\n","output_type":"stream"}],"execution_count":44},{"cell_type":"code","source":"df_final.printSchema()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:57:58.502483Z","iopub.execute_input":"2025-01-30T08:57:58.502819Z","iopub.status.idle":"2025-01-30T08:57:58.507592Z","shell.execute_reply.started":"2025-01-30T08:57:58.502794Z","shell.execute_reply":"2025-01-30T08:57:58.506694Z"}},"outputs":[{"name":"stdout","text":"root\n |-- features: vector (nullable = true)\n |-- label: double (nullable = true)\n\n","output_type":"stream"}],"execution_count":45},{"cell_type":"code","source":"from pyspark.sql.functions import mean\n\nmean_label = df_final.select(mean(col(\"label\")).alias(\"mean_label\")).collect()[0][\"mean_label\"]\n\ndf_final_clean = df_final.fillna({\"label\": mean_label})\n\nmissing_label_after = df_final_clean.select(\n    count(when(isnan(\"label\") | col(\"label\").isNull(), \"label\")).alias(\"missing_label\")\n)\nmissing_label_after.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:58:09.913762Z","iopub.execute_input":"2025-01-30T08:58:09.914082Z","iopub.status.idle":"2025-01-30T08:58:11.20921Z","shell.execute_reply.started":"2025-01-30T08:58:09.914054Z","shell.execute_reply":"2025-01-30T08:58:11.208357Z"},"_kg_hide-output":true},"outputs":[{"name":"stdout","text":"+-------------+\n|missing_label|\n+-------------+\n|            0|\n+-------------+\n\n","output_type":"stream"}],"execution_count":46},{"cell_type":"code","source":"train_df, test_df = df_final_clean.randomSplit([0.8, 0.2], seed=42)\n\nprint(f\"Số dòng training: {train_df.count()}\")\nprint(f\"Số dòng testing: {test_df.count()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:58:17.14584Z","iopub.execute_input":"2025-01-30T08:58:17.146152Z","iopub.status.idle":"2025-01-30T08:58:19.120296Z","shell.execute_reply.started":"2025-01-30T08:58:17.146131Z","shell.execute_reply":"2025-01-30T08:58:19.119472Z"}},"outputs":[{"name":"stdout","text":"Số dòng training: 527\nSố dòng testing: 98\n","output_type":"stream"}],"execution_count":47},{"cell_type":"code","source":"from pyspark.ml.regression import RandomForestRegressor\n\nrf = RandomForestRegressor(featuresCol=\"features\", labelCol=\"label\", numTrees=100, seed=42)\n\nrf_model = rf.fit(train_df)\n\nprint(\"Model training completed.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:58:26.600744Z","iopub.execute_input":"2025-01-30T08:58:26.601054Z","iopub.status.idle":"2025-01-30T08:58:30.985599Z","shell.execute_reply.started":"2025-01-30T08:58:26.601031Z","shell.execute_reply":"2025-01-30T08:58:30.984982Z"}},"outputs":[{"name":"stdout","text":"Model training completed.\n","output_type":"stream"}],"execution_count":48},{"cell_type":"code","source":"from pyspark.ml.evaluation import RegressionEvaluator\n\npredictions = rf_model.transform(test_df)\n\npredictions.select(\"label\", \"prediction\").show(5)\n\nevaluator_rmse = RegressionEvaluator(labelCol=\"label\", predictionCol=\"prediction\", metricName=\"rmse\")\nevaluator_r2 = RegressionEvaluator(labelCol=\"label\", predictionCol=\"prediction\", metricName=\"r2\")\n\nrmse = evaluator_rmse.evaluate(predictions)\nr2 = evaluator_r2.evaluate(predictions)\n\nprint(f\"Root Mean Squared Error (RMSE): {rmse}\")\nprint(f\"R² Score: {r2}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:58:39.236715Z","iopub.execute_input":"2025-01-30T08:58:39.237021Z","iopub.status.idle":"2025-01-30T08:58:41.790831Z","shell.execute_reply.started":"2025-01-30T08:58:39.237Z","shell.execute_reply":"2025-01-30T08:58:41.789767Z"}},"outputs":[{"name":"stdout","text":"+-----+------------------+\n|label|        prediction|\n+-----+------------------+\n|  1.0|3.9369117305281565|\n|  1.0|3.9369117305281565|\n| 20.0| 22.56011926938278|\n| 27.0| 23.61150576439879|\n| 17.0|16.125400790711822|\n+-----+------------------+\nonly showing top 5 rows\n\nRoot Mean Squared Error (RMSE): 6.677568231669278\nR² Score: 0.9824217516497608\n","output_type":"stream"}],"execution_count":49},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\npredictions_pd = predictions.select(\"label\", \"prediction\").toPandas()\n\nsns.set(style=\"whitegrid\")\n\nplt.figure(figsize=(10,6))\nsns.scatterplot(x='label', y='prediction', data=predictions_pd)\nplt.xlabel('Thực Tế AQI')\nplt.ylabel('Dự Đoán AQI')\nplt.title('So Sánh Thực Tế và Dự Đoán AQI')\nplt.plot([predictions_pd['label'].min(), predictions_pd['label'].max()],\n         [predictions_pd['label'].min(), predictions_pd['label'].max()],\n         color='red', linestyle='--')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:58:51.809388Z","iopub.execute_input":"2025-01-30T08:58:51.809707Z","iopub.status.idle":"2025-01-30T08:58:53.939261Z","shell.execute_reply.started":"2025-01-30T08:58:51.809682Z","shell.execute_reply":"2025-01-30T08:58:53.938438Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":50},{"cell_type":"code","source":"import pandas as pd\n\nfeature_importances = rf_model.featureImportances.toArray()\nfeature_names = feature_columns\n\nfeature_imp_df = pd.DataFrame({\n    'Feature': feature_names,\n    'Importance': feature_importances\n})\n\nfeature_imp_df = feature_imp_df.sort_values(by='Importance', ascending=False)\n\nplt.figure(figsize=(12,8))\nsns.barplot(x='Importance', y='Feature', data=feature_imp_df)\nplt.title('Tầm Quan Trọng Các Đặc Trưng trong Random Forest Model')\nplt.xlabel('Importance')\nplt.ylabel('Feature')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T08:59:05.408006Z","iopub.execute_input":"2025-01-30T08:59:05.408567Z","iopub.status.idle":"2025-01-30T08:59:05.731712Z","shell.execute_reply.started":"2025-01-30T08:59:05.408532Z","shell.execute_reply":"2025-01-30T08:59:05.730819Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"from pyspark.ml.regression import RandomForestRegressionModel\n\nloaded_rf_model = RandomForestRegressionModel.load(\"/kaggle/working/air_quality_rf_model\")\n\nloaded_predictions = loaded_rf_model.transform(test_df)\n\nloaded_predictions.select(\"label\", \"prediction\").show(5)\n\nrmse_loaded = evaluator_rmse.evaluate(loaded_predictions)\nr2_loaded = evaluator_r2.evaluate(loaded_predictions)\n\nprint(f\"Root Mean Squared Error (RMSE) của mô hình đã tải: {rmse_loaded}\")\nprint(f\"R² Score của mô hình đã tải: {r2_loaded}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T09:00:21.447222Z","iopub.execute_input":"2025-01-30T09:00:21.447577Z","iopub.status.idle":"2025-01-30T09:00:24.413097Z","shell.execute_reply.started":"2025-01-30T09:00:21.447554Z","shell.execute_reply":"2025-01-30T09:00:24.412174Z"}},"outputs":[{"name":"stdout","text":"+-----+------------------+\n|label|        prediction|\n+-----+------------------+\n|  1.0|3.9369117305281565|\n|  1.0|3.9369117305281565|\n| 20.0| 22.56011926938278|\n| 27.0| 23.61150576439879|\n| 17.0|16.125400790711822|\n+-----+------------------+\nonly showing top 5 rows\n\nRoot Mean Squared Error (RMSE) của mô hình đã tải: 6.677568231669278\nR² Score của mô hình đã tải: 0.9824217516497608\n","output_type":"stream"}],"execution_count":54},{"cell_type":"code","source":"import pandas as pd\n\nevaluation_metrics = pd.DataFrame({\n    'Metric': ['RMSE', 'R2'],\n    'Value': [rmse, r2]\n})\n\nevaluation_metrics.to_csv('/kaggle/working/model_evaluation_metrics.csv', index=False)\n\nprint(\"Evaluation metrics saved successfully.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-30T09:00:48.956476Z","iopub.execute_input":"2025-01-30T09:00:48.956816Z","iopub.status.idle":"2025-01-30T09:00:48.968233Z","shell.execute_reply.started":"2025-01-30T09:00:48.956788Z","shell.execute_reply":"2025-01-30T09:00:48.967336Z"}},"outputs":[{"name":"stdout","text":"Evaluation metrics saved successfully.\n","output_type":"stream"}],"execution_count":55}]}